---
import { getEntry } from 'astro:content';
import Layout from '@/layouts/Layout.astro';
import Sidebar from '@/components/Sidebar.astro';
import { getSidebarData } from '@/lib/getSidebarData';
import { Button } from '@/components/ui/button';
import { ArrowLeft, ArrowRight } from 'lucide-react';
import { Separator } from '@/components/ui/separator';

/* build every /api/<slug> page */
export async function getStaticPaths() {
	const { grouped } = await getSidebarData('api');
	return Object.values(grouped)
		.flat()
		.map(({ slug }) => ({ params: { slug } }));
}

const base = 'api';
let slug = Array.isArray(Astro.params.slug) ? Astro.params.slug[0] : Astro.params.slug;

const entry = await getEntry(base, slug);
if (!entry) throw new Error(`No entry found in "${base}" for slug "${slug}"`);

const { data } = entry;
const { Content } = await entry.render();


/* sidebar + navigation */
const { categories, grouped } = await getSidebarData(base);
const ordered = categories.flatMap((cat) => grouped[cat]);
const idx   = ordered.findIndex((e) => e.slug === slug);
const prev  = idx > 0               ? ordered[idx - 1] : null;
const next  = idx + 1 < ordered.length ? ordered[idx + 1] : null;
---
<Layout
	title={data.title}
	heroImage="/heros/value_of_life_screenshot-lossy.jpg"
	heroHeight={30}
	heroHeightMobile={25}
	primaryText={data.title}
	subText={data.description}
	secondaryBtn="View on GitHub"
	secondaryBtnHref={data.source}
	secondaryExternal
>
	<section class="py-16 bg-background/95 dark:bg-background">
	<div
		class="container mx-auto
		       flex flex-col lg:flex-row
		       gap-6 lg:gap-10
		       px-4 md:px-6"
	>
		<!-- sidebar: slides in on mobile, static on desktop -->
		<Sidebar {categories} {grouped} base={base} />

		<!-- content -->
		<main
			class="flex-1 min-w-0
			       mt-6 lg:mt-0
			       px-0 lg:px-4"
		>
			<article
				class="prose prose-lg max-w-none dark:prose-invert"
			>
				<Content />
			</article>

			<nav class="flex justify-between mt-12">
				{prev ? (
					<a href={`/${base}/${prev.slug}`} class="shrink-0 no-underline">
						<Button variant="outline" className="flex items-center gap-2">
							<ArrowLeft className="w-4 h-4" /> Go Back
						</Button>
					</a>
				) : <span></span>}

				{next ? (
					<a href={`/${base}/${next.slug}`} class="shrink-0 no-underline">
						<Button variant="outline" className="flex items-center gap-2">
							Next Page <ArrowRight className="w-4 h-4" />
						</Button>
					</a>
				) : <span></span>}
			</nav>

        <Separator className="my-8" />

        <a
          href={`/docs`}
          class="flex items-center space-x-2 text-primary hover:underline"
        >
          <ArrowLeft className="h-4 w-4 inline-block" />
          <span>Back to API Reference</span>
        </a>
		</main>
	</div>
</section>
</Layout>
